/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.merlin;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.imgscalr.Scalr;

/**
 *
 * @author Lucky
 */
public class AuthRep extends javax.swing.JDialog {

    /**
     * @return the tempAuName
     */
    public String getTempAuName() {
        return tempAuName;
    }

    /**
     * @param tempAuName the tempAuName to set
     */
    public void setTempAuName(String tempAuName) {
        this.tempAuName = tempAuName;
    }

    /**
     * @return the tempAuRel
     */
    public String getTempAuRel() {
        return tempAuRel;
    }

    /**
     * @param tempAuRel the tempAuRel to set
     */
    public void setTempAuRel(String tempAuRel) {
        this.tempAuRel = tempAuRel;
    }

    /**
     * @return the cli
     */
    public Client getCli() {
        return cli;
    }

    /**
     * @param cli the cli to set
     */
    public void setCli(Client cli) {
        this.cli = cli;
    }

    /**
     * Creates new form AuthRep
     */
    public AuthRep(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        if (authNameCombo.getItemCount() > 0){
            authNameCombo.setEnabled(true);
        } else {
            authNameCombo.setEnabled(false);
        }
        if (authRelCombo.getItemCount() > 0){
            authRelCombo.setEnabled(true);
        } else {
            authRelCombo.setEnabled(false);
        }
    }
        
    private Client cli;
    private final Config con = new Config();
    private final String driver = "jdbc:mariadb://" + con.getProp("IP") + ":" + con.getProp("port") + "/merlininventorydatabase";
    private final String f_user = con.getProp("username");
    private final String f_pass = con.getProp("password");

    private String tempAuName = "";
    private String tempAuRel = "";
    
    public void enablePhotoButtons(boolean state) {
        openFile.setEnabled(state);
        openCam.setEnabled(state);
        openFile2.setEnabled(state);
        openCam2.setEnabled(state);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        photo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        authNameCombo = new javax.swing.JComboBox<>();
        idPhoto = new javax.swing.JLabel();
        addSaveRep = new javax.swing.JButton();
        Close = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        authRelCombo = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        openCam2 = new javax.swing.JButton();
        openFile2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        openFile = new javax.swing.JButton();
        openCam = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        photo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        photo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/merlin/avatarmen-200x200.jpg"))); // NOI18N
        photo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        photo.setPreferredSize(new java.awt.Dimension(240, 180));
        photo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                photoMouseClicked(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Authorized Representative's Name:");

        authNameCombo.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        authNameCombo.setForeground(new java.awt.Color(51, 51, 51));
        authNameCombo.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                authNameComboPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        authNameCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authNameComboActionPerformed(evt);
            }
        });
        authNameCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                authNameComboKeyTyped(evt);
            }
        });

        idPhoto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idPhoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/merlin/idcard_160.jpg"))); // NOI18N
        idPhoto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        idPhoto.setPreferredSize(new java.awt.Dimension(240, 180));
        idPhoto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                idPhotoMouseClicked(evt);
            }
        });

        addSaveRep.setBackground(new java.awt.Color(79, 119, 141));
        addSaveRep.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        addSaveRep.setForeground(new java.awt.Color(255, 255, 255));
        addSaveRep.setText("Add Representative");
        addSaveRep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSaveRepActionPerformed(evt);
            }
        });

        Close.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        Close.setForeground(new java.awt.Color(79, 119, 141));
        Close.setText("Close");

        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Relationship to the Client:");

        authRelCombo.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        authRelCombo.setForeground(new java.awt.Color(51, 51, 51));
        authRelCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authRelComboActionPerformed(evt);
            }
        });

        openCam2.setBackground(new java.awt.Color(79, 119, 141));
        openCam2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        openCam2.setForeground(new java.awt.Color(255, 255, 255));
        openCam2.setText("Open Camera");
        openCam2.setEnabled(false);

        openFile2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        openFile2.setForeground(new java.awt.Color(79, 119, 141));
        openFile2.setText("Open File");
        openFile2.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(openCam2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(openFile2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(openFile2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(openCam2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        openFile.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        openFile.setForeground(new java.awt.Color(79, 119, 141));
        openFile.setText("Open File");
        openFile.setEnabled(false);
        openFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileActionPerformed(evt);
            }
        });

        openCam.setBackground(new java.awt.Color(79, 119, 141));
        openCam.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        openCam.setForeground(new java.awt.Color(255, 255, 255));
        openCam.setText("Open Camera");
        openCam.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(openCam, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(openFile, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(openFile, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(openCam, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(authNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(authRelCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(addSaveRep, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Close, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(photo, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(idPhoto, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(photo, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(authNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(authRelCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addSaveRep, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Close, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void photoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_photoMouseClicked
            ViewID vid = new ViewID(null, true);
            vid.setLocationRelativeTo(null);
            if (authNameCombo.getSelectedIndex() == 0) {
                vid.showID(getCli().getAuthPhoto1());
            } else {
                vid.showID(getCli().getAuthPhoto2());
            }
            vid.setVisible(true);
    }//GEN-LAST:event_photoMouseClicked

    private void idPhotoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_idPhotoMouseClicked
            ViewID vid = new ViewID(null, true);
            vid.setLocationRelativeTo(null);
            if (authNameCombo.getSelectedIndex() == 0) {
                vid.showID(getCli().getAuthAttach1());
            } else {
                vid.showID(getCli().getAuthAttach2());
            }
            vid.setVisible(true);
    }//GEN-LAST:event_idPhotoMouseClicked

    private void addSaveRepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSaveRepActionPerformed
        
        if (addSaveRep.getText().equalsIgnoreCase("Add Representative")) {
            String arn = JOptionPane.showInputDialog("Enter the full name of the Authorized Representative (First Name M.I. Last Name)");
            authNameCombo.addItem(arn);
            String arp = JOptionPane.showInputDialog("Enter the relationship to the Client (e.g. Mother, Father, Aunt)");
            authRelCombo.addItem(arp);
            addSaveRep.setText("Save Representative");
            authNameCombo.setEditable(true);
            authNameCombo.setEnabled(true);
            authRelCombo.setEnabled(true);
            authRelCombo.setEditable(true);
            enablePhotoButtons(true);
        } else {
            enablePhotoButtons(false);
            addSaveRep.setText("Add Representative");
            cli.setAuthName1(authNameCombo.getSelectedItem().toString());
            cli.setAuthRel1(authRelCombo.getSelectedItem().toString());
            
                
        }
    }//GEN-LAST:event_addSaveRepActionPerformed

    private void openFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileActionPerformed
        JFileChooser chooseFile = new JFileChooser();
        FileNameExtensionFilter fnwf = new FileNameExtensionFilter("PNG JPG AND JPEG", "png", "jpeg", "jpg");
        chooseFile.setFileFilter(fnwf);
        int result = chooseFile.showOpenDialog(null);
        chooseFile.setVisible(true);
        if (result == JFileChooser.APPROVE_OPTION) {
            if(!chooseFile.getSelectedFile().getAbsolutePath().equals(null)) {
                try {
                    BufferedImage img=ImageIO.read(new File(chooseFile.getSelectedFile().getAbsolutePath()));
                    ImageIcon icon = new ImageIcon(Scalr.resize(img, Scalr.Method.QUALITY, 240,180));
                    getCli().setPhotoimg(new ImageIcon(Scalr.resize(img, Scalr.Method.QUALITY, 640,480)));
//                    ImageIO.write(Scalr.resize(img, Scalr.Method.QUALITY, 640,480), "jpg", new File(con.getProp("Default_Photo_Folder") + fNameText.getText().concat(" " + lNameText.getText()) + "_photo.jpg"));
                    photo.setIcon(icon);
//                    cli.setPhoto_loc(con.getProp("Default_Photo_Folder") + getCli().getFirst_name().concat(" " + getCli().getLast_name()) + "_auth.jpg");
                } catch (IOException ex) {
                    Logger.getLogger(KnowYourClient.class.getName()).log(Level.SEVERE, null, ex);
                }
                chooseFile.setVisible(false);
            }
        }
    }//GEN-LAST:event_openFileActionPerformed

    private void authNameComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authNameComboActionPerformed
//        setTempAuName(authNameCombo.getEditor().getItem().toString());
//        System.out.println(tempAuName);
//        if (authNameCombo.getItemCount() > 0) {
//            cli.setAuthName2(authNameCombo.getEditor().getItem().toString());
//        } else {
//            cli.setAuthName1(authNameCombo.getEditor().getItem().toString());
//        }
    }//GEN-LAST:event_authNameComboActionPerformed

    private void authRelComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authRelComboActionPerformed
//        setTempAuRel(authRelCombo.getEditor().getItem().toString());
//        System.out.println(tempAuRel);
//        if (authRelCombo.getItemCount() > 0) {
//            cli.setAuthRel2(authRelCombo.getEditor().getItem().toString());
//        } else {
//            cli.setAuthRel1(authRelCombo.getEditor().getItem().toString());
//        }
    }//GEN-LAST:event_authRelComboActionPerformed

    private void authNameComboPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_authNameComboPopupMenuWillBecomeInvisible
        
    }//GEN-LAST:event_authNameComboPopupMenuWillBecomeInvisible

    private void authNameComboKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_authNameComboKeyTyped
//        System.out.println(authNameCombo.getEditor().getItem());
    }//GEN-LAST:event_authNameComboKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AuthRep.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AuthRep.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AuthRep.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AuthRep.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AuthRep dialog = new AuthRep(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Close;
    private javax.swing.JButton addSaveRep;
    private javax.swing.JComboBox<String> authNameCombo;
    private javax.swing.JComboBox<String> authRelCombo;
    private javax.swing.JLabel idPhoto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton openCam;
    private javax.swing.JButton openCam2;
    private javax.swing.JButton openFile;
    private javax.swing.JButton openFile2;
    private javax.swing.JLabel photo;
    // End of variables declaration//GEN-END:variables
}
