/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.merlin;

import com.formdev.flatlaf.FlatLightLaf;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Insets;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author Lucky
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
//        try {
            initComponents();
            setIconImage((new ImageIcon(getClass().getResource("/images/merlin logo.png"))).getImage());
            setLocationRelativeTo(null);
            URL imgURL = MainFrame.class.getResource("/images/merlin logo.png");
            if (imgURL != null) {
                setIconImage((new ImageIcon(imgURL, "Icon")).getImage());
            }
//        if(!new File("C:\\MPIS\\config.properties").exists()) {
//            JOptionPane.showMessageDialog(null, "Configuration File must exist. Please check that a configuration file is at your MPIS folder.");
//        }
        File defPhoFile = new File(con.getProp("default_photo_folder"));
        if (!defPhoFile.exists()) {
                try {
                    defPhoFile.createNewFile();
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null, "Error on creating Default Photo Folder for KYC.", "File Creation Error",JOptionPane.ERROR_MESSAGE);
//                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
        DatabaseUpdater dbu = new DatabaseUpdater();
        try {
            dbu.createBackupFile();
            
            
        
            
//        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
//        ge.registerFont(Font.createFont(Font.TRUETYPE_FONT, new File("/font/Roboto-Bold.ttf")));
//        ge.registerFont(Font.createFont(Font.TRUETYPE_FONT, new File("/font/RobotoCondensed-Bold.ttf")));
//        } catch (FontFormatException ex) {
//            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (IOException ex) {
//            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private Config con = new Config();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        logInPanel = new com.merlin.LogInPanel();
        subFrame = new com.merlin.SubFrame();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MPI Pawn Management System version 2022_v1.2 (July 2022)");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        mainPanel.setLayout(new java.awt.CardLayout());

        logInPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                logInPanelComponentHidden(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                logInPanelComponentShown(evt);
            }
        });
        mainPanel.add(logInPanel, "login_card");

        subFrame.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                subFrameComponentHidden(evt);
            }
        });
        mainPanel.add(subFrame, "subframe_card");

        getContentPane().add(mainPanel);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logInPanelComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_logInPanelComponentHidden
        CardLayout cl = (CardLayout)this.mainPanel.getLayout();
/* 116 */     cl.show(this.mainPanel, "subframe_card");
    }//GEN-LAST:event_logInPanelComponentHidden

    private void logInPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_logInPanelComponentShown
        logInPanel.requestFocusOnUsername();
    }//GEN-LAST:event_logInPanelComponentShown

    private void subFrameComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_subFrameComponentHidden
        this.logInPanel.erasePW();
/* 125 */     CardLayout cl = (CardLayout)this.mainPanel.getLayout();
/* 126 */     cl.show(this.mainPanel, "login_card");
/* 127 */     this.logInPanel.requestFocusOnUsername();
    }//GEN-LAST:event_subFrameComponentHidden

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
//        Management manage = new Management();
///* 137 */     DateHelper dateHelp = new DateHelper();
///* 138 */     File tempFolder = new File("D:\\MPIS_BackUp");
///* 139 */     if (!tempFolder.exists()) {
///* 140 */       tempFolder.mkdir();
///*     */     }
///* 142 */     if (manage.backupDB("merlininventorydatabase", "root", "merlin", "C:\\MPIS_BackUp\\" + dateHelp.getSavingDate() + " " + dateHelp.getSavingTime()) == true)
///* 143 */       System.out.println("backup successful"); 
///* 144 */     this.con.saveProp("last_logout", dateHelp.getDateTime());
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
            * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
             */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Windows".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//</editor-fold>

        try {
            UIManager.setLookAndFeel(new FlatLightLaf());
            UIManager.put( "Button.arc", 10 );
            UIManager.put( "Component.arc", 10 );
            UIManager.put( "ProgressBar.arc", 10 );
            UIManager.put( "TextComponent.arc", 10 );
            UIManager.put( "CheckBox.arc", 10 );
            UIManager.put( "ScrollBar.thumbArc", 3 );
            UIManager.put( "ScrollBar.thumbInsets", new Insets( 2, 2, 2, 2 ) );
            UIManager.put( "TabbedPane.showTabSeparators", true );
            UIManager.put( "TabbedPane.tabSeparatorsFullHeight", true );
            UIManager.put( "TabbedPane.selectedBackground", Color.white );
//            FlatGitHubIJTheme.setup();
        } catch (Exception ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.merlin.LogInPanel logInPanel;
    private javax.swing.JPanel mainPanel;
    private com.merlin.SubFrame subFrame;
    // End of variables declaration//GEN-END:variables
}
